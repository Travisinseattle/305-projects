/*
 * TCSS 305 Fall 2015
 * Assignment 6 - Tetris.
 */

package view;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;

import model.Board;

/**
 * This is the class that displays the Score JPanel.
 * 
 * @author Travis Holloway
 * @version Assignment 6: Tetris, December 1 2015
 */
public class ScorePanel extends JPanel implements Observer {
    
    /**
     * Auto-generated serial ID.
     */
    private static final long serialVersionUID = -428301323664751701L;
    
    /**
     * Constant for the starting width of the panel.
     */
    private static final int WIDTH = 400;
    
    /**
     * Constant for the starting height of the panel.
     */
    private static final int HEIGHT = 254;

    /**
     * Constructor for ScorePanel.
     */
    public ScorePanel() {
        super();
        configurePanel();
    }

    /**
     * Method to initialize the class fields and configure the JPanel.
     */
    private void configurePanel() {
        setSize(new Dimension(WIDTH, HEIGHT));
        setBackground(Color.LIGHT_GRAY);
        
        final Border raisedbevel = BorderFactory.createRaisedBevelBorder();
        final Border loweredbevel = BorderFactory.createLoweredBevelBorder();
        
        final Border titled = BorderFactory.createTitledBorder(raisedbevel,
                                                               "Score",
                                                               TitledBorder.
                                                               DEFAULT_JUSTIFICATION,
                                                               TitledBorder.
                                                               DEFAULT_POSITION,
                                                               new Font("times new roman",
                                                                        Font.PLAIN, 40),
                                                               Color.BLACK);
        
        setBorder(BorderFactory.createCompoundBorder(titled, loweredbevel));
    }

    /* (non-Javadoc)
     * @see java.util.Observer#update(java.util.Observable, java.lang.Object)
     */
    @Override
    public void update(final Observable theObservable,
                       final Object theObject) {
        if (theObservable instanceof Board) {
            repaint();
        }
    }

}
